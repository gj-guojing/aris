#include <string>
#include <cstring>
#include <iostream>
#include <sstream>
#include <aris.hpp>
#include <aris/ext/json.hpp>

int main(int argc, char *argv[]){
	
	ARIS_COUT << "sending data:" << std::endl;
	aris::core::Socket client;

	const int n = 8;
	double pe_tool_in_base[n][6]{
	{805.274911,315.296968,622.923222,270.089615,7.576354,143.475021},
	{807.528099,192.358122,533.766378,252.773708,16.775748,139.864493 },
	{810.656227,193.447522,555.544276,252.160947,17.216653,139.284136},
	{703.055386,393.973543,635.753282,297.275858,-2.776476,146.597051},
	{736.764133,407.004243,576.898704,297.385539,-2.511494,144.171319},
	{774.181753,376.340377,550.681197,294.633840,-2.338603,142.601433},
	{708.394648,560.365043,546.019583,327.438039,-15.554671,127.257024},
	{788.483623,369.193844,556.525055,291.617520,0.320245,141.774271}
	};
	double pe_obj_in_eye[n][6]{
		{ -8.54, 14.123, 516.975, 1.64404, 0.083299, 3.1057},
		{24.097, 4.539, 440.932, 1.3541, 0.096654, 2.90711},
		{13.153, 9.99, 461.617, 1.34519, 0.102088, 2.89634},
		{-13.778, 29.961, 544.16, 2.10252, -0.057346, -3.00314},
		{-22.242, 17.293, 483.206, 2.10872, -0.018245, -2.98404},
		{17.09, 15.964, 449.284, 2.06448, 0.016135, -2.97464},
		{9.191, 26.467, 499.036, 2.55876, -0.138528, -2.63453},
		{3.022, 18.44, 452.709, 2.01848, 0.057736, -3.01188},
	};


	std::stringstream ss;

	for (int i = 0; i < n; ++i) {
		for (int j = 0; j < 6; ++j) {
			ss << pe_tool_in_base[i][j];

			if (j != 5) {
				ss << " , ";
			}
		}
		ss << "\n";
	}

	ss << "\n";

	for (int i = 0; i < n; ++i) {
		for (int j = 0; j < 6; ++j) {
			ss << pe_obj_in_eye[i][j];

			if (j != 5) {
				ss << " , ";
			}
		}
		if (i != n - 1) {
			ss << "\n";
		}
	}

	std::cout << ss.str() << std::endl;

	client.connect("127.0.0.1", "5870");
	client.sendMsg(aris::core::Msg(ss.str()));





	client.setOnReceivedMsg([](aris::core::Socket* socket, aris::core::Msg& msg)->int {
		ARIS_COUT << msg.toString() << std::endl;
		return 0;
		});



	std::this_thread::sleep_for(std::chrono::seconds(10));



	return 0;
}